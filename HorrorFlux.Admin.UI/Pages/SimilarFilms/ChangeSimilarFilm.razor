@inject IAdminService adminService

<EditForm Model="Model" OnValidSubmit="@OnFormSubmit" class="mb-5 border border-1 border-secondary p-2 w-25">
    <DataAnnotationsValidator />
    <h4>@Page Similar film connection</h4>
    <div class="mb-3">
        @if (Page.Equals(PageType.Delete))
        {
            <label>Parent filk</label>
            <InputText id="ParentFilmTitle" class="form-control me-2" @bind-Value="Model.ParentFilmTitle" disabled placeholder="Title"></InputText>
            <label>Similar film</label>
            <InputText id="SimilarFilmTitle" class="form-control me-2" @bind-Value="Model.SimilarFilmTitle" disabled placeholder="Title"></InputText>
        }
        else
        {
            <InputSelect  @bind-Value="Model.ParentFilmId" class="form-control mb-3"> @*Här får du göra en kontroll så att den du väljer först tas bort från andra listan.*@
                <option value=0></option>
                @foreach (var film in filmDTO)
                {
                    <option value="@film.Id">@film.Title</option>
                }
            </InputSelect>
            <InputSelect  @bind-Value="Model.SimilarFilmId" class="form-control mb-3">
                <option value=0></option>
                @foreach (var film in filmDTO)
                {
                    <option value="@film.Id">@film.Title</option>
                }
            </InputSelect>

        }
    </div>
    

    <button type="submit" class="btn btn-@(Page.Equals(PageType.Delete) ? "danger" : "success") rounded-0">@Page</button>
</EditForm>

@code {
    [Parameter] public SimilarFilmsDTO Model { get; set; } = new();
    [Parameter] public string Page { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> OnChange { get; set; }
    public List<FilmDTO> filmDTO { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        filmDTO = await adminService.GetAsync<FilmDTO>("Films");
    }
    public async Task OnFormSubmit() //Här får du väl fundera hur du ska göra, om du ska skicka in en FilmDTO verkligen? Det borde väl vara en edit eller create?
    {
        try
        {
            if (Page.Equals(PageType.Create))
                await adminService.CreateAsync<SimilarFilmsDTO>("SimilarFilms", Model);
            else if (Page.Equals(PageType.Delete))
                await adminService.DeleteAsync<SimilarFilmsDTO>($"SimilarFilms?id={Model.ParentFilmId}&id={Model.SimilarFilmId}");
            await OnChange.InvokeAsync("");
        }
        catch
        {
            await OnChange.InvokeAsync("Couldn't create/edit/delete the similar film.");
        }
    }
}
