@inject IAdminService adminService

@if (string.IsNullOrEmpty(Alert) == false)
{
    <div class="d-flex">
        <div class="alert alert-warning alert-dismissible" role="alert">
            <strong>@Alert</strong>
            <button type="button" @onclick="CloseAlert" class="btn-close" aria-label="Close"></button>
        </div>
    </div>
}
@if (Navigation == PageType.Create)
{
    <ChangeGenre Page="@Navigation" OnChange="OnChange"></ChangeGenre>
}
@if (Navigation == PageType.Edit || Navigation == PageType.Delete)
{
    <ChangeGenre Page="@Navigation" OnChange="OnChange" Model="Genre"></ChangeGenre>
}
<div class="d-flex me-1">
    <a href="/" class="btn btn-primary me-1">Home</a>
    <button class="btn btn-primary me-1" @onclick="()=>ChangePageType(PageType.Index)">Index</button>
    <button class="btn btn-primary me-1" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
</div>

<GenresIndex OnClick="OnClick" Model="Model"></GenresIndex>

@code {
    List<GenreDTO> Model { get; set; } = new();
    string Alert { get; set; } = string.Empty;
    string Navigation { get; set; } = PageType.Index;
    public GenreDTO Genre { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        Alert = string.Empty;

        Model = await adminService.GetAsync<GenreDTO>("Genres");


    }

    void ChangePageType(string pageType)
    {
        Navigation = pageType;
    }
    void CloseAlert()
    {
        Alert = string.Empty;
    }
    async Task OnClick(ClickModel model)
    {
        if (model.PageType.Equals(PageType.Edit) || model.PageType.Equals(PageType.Delete))
            Genre = await adminService.SingleAsync<GenreDTO>($"Genres/{model.Id}") ?? new();

        ChangePageType(model.PageType);
    }
    async Task OnChange(string alert)
    {
        try
        {
            Alert = alert;
            Model = await adminService.GetAsync<GenreDTO>("Genres");
            ChangePageType(PageType.Index);
            Genre = new(); 
        }
        catch
        {
            Alert = "Couldn't create/edit/delete the genre.";
        }

    }


}
